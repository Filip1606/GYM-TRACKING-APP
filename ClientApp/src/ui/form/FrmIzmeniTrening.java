/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui.form;

import domain.Trening;
import domain.Vezba;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import table.model.TableModelVezba;
import ui.controller.Controller;

/**
 *
 * @author Filip
 */
public class FrmIzmeniTrening extends javax.swing.JDialog {

    private Trening izabrani;
    private FrmPretraziTreninge frmPretraziTreninge;
    private Vezba izabrana;
    
    private List<Vezba> vezbe = new ArrayList<>();
    private List<Vezba> vezbe2 = new ArrayList<>();
    /**
     * Creates new form FrmIzmeniTrening
     */
    public FrmIzmeniTrening(java.awt.Frame parent, boolean modal, FrmPretraziTreninge frmPretraziTreninge) {
        super(parent, modal);
        initComponents();
        this.frmPretraziTreninge = frmPretraziTreninge;
        izabrani = frmPretraziTreninge.getIzabrani();
        vezbe = izabrani.getVezbe();
        napuniPolja();
        napuniTabelu();
        setLocationRelativeTo(null);
        setTitle("Izmena treninga");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        txtTrajanje = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtBeleska = new javax.swing.JTextArea();
        btnIzmeni = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVezbe = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnObrisiVezbu = new javax.swing.JButton();
        btnIzmeniVezbu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Naziv:");

        jLabel2.setText("Trajanje (min):");

        jLabel3.setText("Beleška:");

        txtBeleska.setColumns(20);
        txtBeleska.setRows(5);
        jScrollPane1.setViewportView(txtBeleska);

        btnIzmeni.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnIzmeni.setForeground(new java.awt.Color(255, 255, 255));
        btnIzmeni.setText("Sačuvaj izmenu");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        tblVezbe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblVezbe);

        jLabel4.setText("Vežbe:");

        btnObrisiVezbu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnObrisiVezbu.setText("Obriši vežbu");
        btnObrisiVezbu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiVezbuActionPerformed(evt);
            }
        });

        btnIzmeniVezbu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnIzmeniVezbu.setText("Izmeni vežbu");
        btnIzmeniVezbu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniVezbuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTrajanje)
                            .addComponent(txtNaziv)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnIzmeniVezbu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnObrisiVezbu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(btnIzmeni)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTrajanje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnObrisiVezbu)
                        .addGap(18, 18, 18)
                        .addComponent(btnIzmeniVezbu)))
                .addGap(45, 45, 45)
                .addComponent(btnIzmeni)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        String naziv = txtNaziv.getText();
        String trajanje = txtTrajanje.getText();
        String beleska = txtBeleska.getText();
        
        if (validate(naziv, trajanje, beleska)) {
            try {
                
                izabrani.setNaziv(naziv);
                izabrani.setTrajanje(Integer.parseInt(trajanje));
                izabrani.setBeleska(beleska);
                
                TableModelVezba model = (TableModelVezba) tblVezbe.getModel();
                vezbe = model.getLista();
                izabrani.setVezbe(vezbe);
                
                Controller.getInstance().izmeniTrening(izabrani);
                JOptionPane.showMessageDialog(this, "Sistem je izmenio trening", "Izmena treninga", JOptionPane.INFORMATION_MESSAGE);
                frmPretraziTreninge.napuniTabelu();
                this.dispose();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da izmeni trening", "Izmena treninga", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnIzmeniVezbuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniVezbuActionPerformed
        int red = tblVezbe.getSelectedRow();
        if (red != -1) {
            izabrana = vezbe2.get(red);
            new FrmIzmeniVezbu((Frame) this.getParent(), true, izabrana, this, tblVezbe).setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(this, "Morate selektovati red u tabeli", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIzmeniVezbuActionPerformed

    private void btnObrisiVezbuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiVezbuActionPerformed
        int red = tblVezbe.getSelectedRow();
        if (red != -1) {
            try {
                TableModelVezba model = (TableModelVezba) tblVezbe.getModel();
                Vezba v = model.getVezba(red);
                model.obrisiVezbu(red);
                Controller.getInstance().obrisiVezbu(v);
            } catch (Exception ex) {
                Logger.getLogger(FrmIzmeniTrening.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Morate selektovati red u tabeli", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnObrisiVezbuActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnIzmeniVezbu;
    private javax.swing.JButton btnObrisiVezbu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblVezbe;
    private javax.swing.JTextArea txtBeleska;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtTrajanje;
    // End of variables declaration//GEN-END:variables

    private void napuniPolja() {
        txtNaziv.setText(izabrani.getNaziv());
        txtTrajanje.setText(String.valueOf(izabrani.getTrajanje()));
        txtBeleska.setText(izabrani.getBeleska());
    }
    
    private boolean validate(String naziv, String trajanje, String beleska) {
        boolean signal = true;
        
        if (naziv.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Polje naziv ne sme biti prazno", "Greška", JOptionPane.ERROR_MESSAGE);
            signal = false;
        }
        
        if (trajanje.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Polje trajanje ne sme biti prazno", "Greška", JOptionPane.ERROR_MESSAGE);
            signal = false;
        }
        
        if (beleska.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Polje beleška ne sme biti prazno", "Greška", JOptionPane.ERROR_MESSAGE);
            signal = false;
        }
        
        if (!naziv.isEmpty()) {
            if (naziv.length() > 30) {
                JOptionPane.showMessageDialog(this, "Polje naziv ne sme biti duže od 30 karaktera", "Greška", JOptionPane.ERROR_MESSAGE);
                signal = false;
            }
        }
        
        if (!trajanje.isEmpty()) {
            if (trajanje.matches("[a-zA-Z]+")) {
                JOptionPane.showMessageDialog(this, "Polje trajanje mora biti broj", "Greška", JOptionPane.ERROR_MESSAGE);
                signal = false;
            }
        }
        
        if (!beleska.isEmpty()) {
            if (beleska.length() > 150) {
                JOptionPane.showMessageDialog(this, "Polje beleška ne sme biti duže od 150 karaktera", "Greška", JOptionPane.ERROR_MESSAGE);
                signal = false;
            }
        }
        
        return signal;
    }

    private void napuniTabelu() {
        try {
            vezbe2.clear();
            vezbe = Controller.getInstance().vratiVezbe();
            for (Vezba vezba : vezbe) {
                if (izabrani.getIDTreninga() == vezba.getIDTreninga().getIDTreninga()) {
                    vezbe2.add(vezba);
                } 
            }
            TableModelVezba model = new TableModelVezba();
            model.setLista(vezbe2);
            tblVezbe.setModel(model);
        } catch (Exception ex) {
            Logger.getLogger(FrmIzmeniTrening.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
}
