/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui.form;

import domain.Clanstvo;
import domain.Korisnik;
import domain.Teretana;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;
import ui.form.dateformatter.DateLabelFormatter;
import ui.controller.Controller;

/**
 *
 * @author Filip
 */
public class FrmKreirajClanstvo extends javax.swing.JDialog {

    JDatePickerImpl datePicker1;
    UtilDateModel model1;
    JDatePickerImpl datePicker2;
    UtilDateModel model2;
    LocalDate localDatumOd;
    LocalDate localDatumDo;
    Korisnik korisnik;
    Teretana teretana;
    
    /**
     * Creates new form FrmDodajClanstvo
     */
    public FrmKreirajClanstvo(java.awt.Frame parent, boolean modal, Korisnik korisnik, Teretana teretana) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.korisnik = korisnik;
        this.teretana = teretana;
        inicijalizujKalendar();
        setLocationRelativeTo(null);
        setTitle("Kreiranje novog članstva");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCena = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();
        panelDatumOd = new javax.swing.JPanel();
        panelDatumDo = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Datum pocetka:");

        jLabel2.setText("Datum isteka:");

        jLabel3.setText("Cena:");

        btnSacuvaj.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSacuvaj.setForeground(new java.awt.Color(255, 255, 255));
        btnSacuvaj.setText("Sačuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        panelDatumOd.setAlignmentX(70.0F);
        panelDatumOd.setAlignmentY(10.0F);
        panelDatumOd.setPreferredSize(new java.awt.Dimension(200, 30));

        javax.swing.GroupLayout panelDatumOdLayout = new javax.swing.GroupLayout(panelDatumOd);
        panelDatumOd.setLayout(panelDatumOdLayout);
        panelDatumOdLayout.setHorizontalGroup(
            panelDatumOdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 257, Short.MAX_VALUE)
        );
        panelDatumOdLayout.setVerticalGroup(
            panelDatumOdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
        );

        panelDatumDo.setAlignmentX(70.0F);
        panelDatumDo.setAlignmentY(10.0F);
        panelDatumDo.setPreferredSize(new java.awt.Dimension(200, 30));

        javax.swing.GroupLayout panelDatumDoLayout = new javax.swing.GroupLayout(panelDatumDo);
        panelDatumDo.setLayout(panelDatumDoLayout);
        panelDatumDoLayout.setHorizontalGroup(
            panelDatumDoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 257, Short.MAX_VALUE)
        );
        panelDatumDoLayout.setVerticalGroup(
            panelDatumDoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(btnSacuvaj))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(txtCena))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(btnSacuvaj)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        Date datumOd = (Date) model1.getValue();
        localDatumOd = dateToLocalDate(datumOd);
        
        Date datumDo = (Date) model2.getValue();
        localDatumDo = dateToLocalDate(datumDo);
        
        String cena = txtCena.getText();
        if (validiraj(cena)) {
            Clanstvo clanstvo = new Clanstvo();
            clanstvo.setIDKorinsika(korisnik);
            clanstvo.setIDTeretane(teretana);
            clanstvo.setDatumOd(localDatumOd);
            clanstvo.setDatumDo(localDatumDo);
            clanstvo.setCena(Integer.parseInt(cena));
            try {
                Controller.getInstance().kreirajClanstvo(clanstvo);
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio članstvo", "Uspešno kreiranje", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti članstvo", "Neuspešno kreiranje", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel panelDatumDo;
    private javax.swing.JPanel panelDatumOd;
    private javax.swing.JTextField txtCena;
    // End of variables declaration//GEN-END:variables

    private void inicijalizujKalendar() {
        model1 = new UtilDateModel();
        Properties p1 = new Properties();
        JDatePanelImpl datePanel1 = new JDatePanelImpl(model1, p1);
        datePicker1 = new JDatePickerImpl(datePanel1, new DateLabelFormatter());
        panelDatumOd.setLayout(null); 
        panelDatumOd.setBounds(35, 10, 200, 30);
        datePicker1.setBounds(35, 10, 200, 30); 
        panelDatumOd.add(datePicker1);
        
        model2 = new UtilDateModel();
        Properties p2 = new Properties();
        JDatePanelImpl datePanel2 = new JDatePanelImpl(model2, p2);
        datePicker2 = new JDatePickerImpl(datePanel2, new DateLabelFormatter());
        panelDatumDo.setLayout(null); 
        panelDatumDo.setBounds(35, 10, 200, 30);
        datePicker2.setBounds(35, 10, 200, 30); 
        panelDatumDo.add(datePicker2);
    }
    
    private LocalDate dateToLocalDate(Date odabraniDatum) {
        return Instant.ofEpochMilli(odabraniDatum.getTime()).atZone(ZoneId.systemDefault()).toLocalDate();
    }

    private boolean validiraj(String cena) {
        boolean signal = true;
        if (cena.matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Polje cena mora biti broj", "Greška", JOptionPane.ERROR_MESSAGE);
            signal = false;
        }
        if (localDatumDo.isBefore(localDatumOd)) {
            JOptionPane.showMessageDialog(this, "Datum pocetka mora biti pre datuma kraja", "Greška", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return signal;
    }
}
