/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui.form;

import domain.Korisnik;
import domain.Trening;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import table.model.TableModelTrening;
import ui.controller.Controller;

/**
 *
 * @author Filip
 */
public class FrmPretraziTreninge extends javax.swing.JDialog {

    private Korisnik korisnik;
    private List<Trening> treninzi = new ArrayList<>();
    private List<Trening> treninziKorisnika = new ArrayList<>();
    private Trening izabrani;
    /**
     * Creates new form FrmPretraziTreninge
     */
    public FrmPretraziTreninge(java.awt.Frame parent, boolean modal, Korisnik korisnik) {
        super(parent, modal);
        initComponents();
        this.korisnik = korisnik;
        napuniTabelu();
        setLocationRelativeTo(null);
        setTitle("Pretraga treninga");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNazivTreninga = new javax.swing.JTextField();
        btnPretrazi = new javax.swing.JButton();
        btnOsvezi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTreninzi = new javax.swing.JTable();
        btnObrisi = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Naziv treniniga:");

        btnPretrazi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPretrazi.setForeground(new java.awt.Color(255, 255, 255));
        btnPretrazi.setText("Pretraži");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        btnOsvezi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnOsvezi.setForeground(new java.awt.Color(255, 255, 255));
        btnOsvezi.setText("Osveži");
        btnOsvezi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsveziActionPerformed(evt);
            }
        });

        tblTreninzi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTreninzi);

        btnObrisi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnObrisi.setForeground(new java.awt.Color(255, 255, 255));
        btnObrisi.setText("Obriši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnDodaj.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDodaj.setForeground(new java.awt.Color(255, 255, 255));
        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnIzmeni.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnIzmeni.setForeground(new java.awt.Color(255, 255, 255));
        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIzmeni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDodaj)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisi))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNazivTreninga, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPretrazi)
                        .addGap(18, 18, 18)
                        .addComponent(btnOsvezi)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNazivTreninga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretrazi)
                    .addComponent(btnOsvezi))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisi)
                    .addComponent(btnDodaj)
                    .addComponent(btnIzmeni))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        int red = tblTreninzi.getSelectedRow();
        if (red != -1) {
            izabrani = treninziKorisnika.get(red);
            JOptionPane.showMessageDialog(this, "Sistem je učitao treninge", "Učitavanje treninga", JOptionPane.INFORMATION_MESSAGE);
            new FrmIzmeniTrening((Frame)this.getParent(), true, this).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati trening", "Greška",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        new FrmKreirajTrening((Frame)this.getParent(), true, korisnik).setVisible(true);
        napuniTabelu();
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int red = tblTreninzi.getSelectedRow();
        if (red != -1) {
            int izbor = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da obrisete trening", "Brisanje", JOptionPane.YES_NO_OPTION);
            if (izbor == JOptionPane.YES_OPTION) {
                try {
                    izabrani = treninziKorisnika.get(red);
                    Controller.getInstance().obrisiTrening(izabrani);
                    JOptionPane.showMessageDialog(this, "Sistem je obrisao trening", "Brisanje treninga", JOptionPane.INFORMATION_MESSAGE);
                    napuniTabelu();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Sistem ne može da obriše trening", "Brisanje treninga", JOptionPane.ERROR_MESSAGE);
                }
            } 
        }  else {
            JOptionPane.showMessageDialog(this, "Prvo izaberite red tabele", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        String naziv = txtNazivTreninga.getText();
        if (naziv.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate uneti kriterijum pretrage", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        } 
        Trening t = new Trening();
        t.setNaziv(naziv);
        try {
            treninzi = Controller.getInstance().pretraziTreninge(t);
            JOptionPane.showMessageDialog(this, "Sistem je našao treninge po zadatoj vrednosti", "Pretraga treninga", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da nadje treninge po zadatoj vrednosti", "Pretraga treninga", JOptionPane.ERROR_MESSAGE);
        }
        napuniTabelu(treninziKorisnika);
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnOsveziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsveziActionPerformed
        txtNazivTreninga.setText("");
        napuniTabelu();
    }//GEN-LAST:event_btnOsveziActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOsvezi;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTreninzi;
    private javax.swing.JTextField txtNazivTreninga;
    // End of variables declaration//GEN-END:variables

    public void napuniTabelu() {
        treninzi.clear();
        treninziKorisnika.clear();
        try {
            treninzi = Controller.getInstance().vratiTreninge();
            for (Trening trening : treninzi) {
                if (trening.getIDKorisnika().getIDKorisnika() == korisnik.getIDKorisnika()) {
                    treninziKorisnika.add(trening);
                }
            }
            TableModelTrening tmt = new TableModelTrening();
            tmt.setLista(treninziKorisnika);
            tblTreninzi.setModel(tmt);
        } catch (Exception ex) {
            System.out.println("Tabela nije uspesno popunjena");
        }
    }

    public Trening getIzabrani() {
        return izabrani;
    }

    private void napuniTabelu(List<Trening> treninzi) {
        TableModelTrening tmt = new TableModelTrening(treninzi);
        tblTreninzi.setModel(tmt);
    }
    
    
}
